@inherits LayoutComponentBase

<PageTitle>Hills AI Dashboard</PageTitle>

@if(DisableOverlay == false) {
	<div class="@OverlayClass">
		<h2 style="margin-left: 40px;">Loading... <img class="fa-flip" style="width: 40px;" src="/img/logo.webp"></h2>		
	</div>
}

@if(PinIsValid) {

	<NavMenu Hide=@(DisableOverlay == false) />

	<main class="@MainClass container-fluid mt-4">
		@Body
	</main>

} else {

	<main class="@MainClass container-fluid d-flex justify-content-center align-items-center flex-column" style="height: 500px;width: 500px;margin-left: auto;margin-right: auto;padding-top:10em;">
		<img src="/img/logo.webp"/>
		
		<div class="form-group w-100 mt-5">
			<h3>PIN</h3>
			<InputText type="password" class="form-control"  @bind-Value=@PinString/>
		</div>
		<div class="btn btn-primary mt-4 d-block w-100" @onclick=OnPinInput>Login</div>
	</main>

}

@code {

	[Parameter]
	public bool DisableOverlay { get; set; } = false;
	public bool HideOverlay { get; set; } = false;
	
	public string MainClass => DisableOverlay ? "loaded" : "";


	public string OverlayClass => "overlay" + (HideOverlay ? " hide" : "");

	[Inject]
	Blazored.LocalStorage.ILocalStorageService localStorage {get; set;} = default!;

	public int Pin { get; set; } = -1;

	[Parameter]
	public string PinString { get; set; } = string.Empty;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await Task.Delay(1000);
		Pin = await localStorage.GetItemAsync<int>("PIN");
		HideOverlay = true;
		await base.OnAfterRenderAsync(firstRender);
		StateHasChanged();

		await Task.Delay(1000);
		DisableOverlay = true;
		StateHasChanged();
	}

		public bool PinIsValid => Pin == 123456;

	private async void OnPinInput() {

		int pin;
		if(int.TryParse(PinString, out pin)) {
			Pin = pin;
			await localStorage.SetItemAsync<int>("PIN", Pin);
		}

	}

}